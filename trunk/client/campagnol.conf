#
# Campagnol VPN example configuration file
#
# See the campagnol.conf(5) man page for a complete description of the
# parameters.
#

[NETWORK]

# Local hostname or IP address
# optional
# default: search for a non local IP possibly using the "interface" parameter.
#local_host = 192.168.0.4
# Using 0.0.0.0 will work but is incompatible with the "use_local_addr" option.
#local_host = 0.0.0.0

# Local UDP port number
# optional
# default: no port binding
#local_port=44556

# Allow the use of the local IP and UDP port.
# optional
# default: yes
# This option is useful if this client and other clients of the VPN are behind
# the same NAT. See campagnol.conf(5).
# Disable this option only if you know that it's not necessary and you know what
# you are doing!
#use_local_addr = no

# Override the local address sent to the RDV server (use_local_address = yes)
# optional
# default: not enabled
# In some special case, it may be usefull to use another address (for example
# the public address on a NAT) instead of the real local address. See
# campagnol.conf(5).
#override_local_addr = 172.16.17.17 23456

# Rendezvous server hostname or IP address
# mandatory
server_host = 192.168.0.1

# Rendezvous server port
# optional
# default: 57888
#server_port = 34567

# MTU of the TUN device
# optional
# default: 1419
# This parameter must be the same for all peers
# It may be interesting to change the MTU of the tun device if
# you are running campagnol on a network with a unusual MTU.
#tun_mtu = 1400

# Bind to a specific network interface
# optional
# Linux only: if given, the UDP socket is bound to this interface.
# This parameter is also used to find the local IP address to use if
# it the "local_host" parameter is not used"
# default: no interface binding
#interface = eth0

# Linux:
# Give the name after-specified to the TUN device.
# default: the interface is named tun%d
# Cygwin:
# The name of the TUN/TAP adapter to open.
# default: open the first TUN/TAP adapter found.
# Other OS: this parameter is ignored.
#tun_device = "Local Area Connection 3"

# Cygwin only:
# The name of the OpenVPN's TUN/TAP driver.
# This is used to search for TUN/TAP adapters.
# default: tap0901
# It may work with other versions.
#tap_id = "tap0801"


[VPN]

# IP address for the VPN
# mandatory
vpn_ip = 10.0.0.1

# Subnetwork for the VPN
# mandatory
# must be the same for all peers
# Use the CIDR notation
network=10.0.0.0/24


[SECURITY]

# PEM file containing the client X.509 certificate
# mandatory
certificate = ./box1/certificate.pem

# PEM file containing the client private key
# mandatory
key = ./box1/key.pem

# PEM file containing a root certificates chain
# Specify at least one of ca_certificates and ca_cartificates_dir
ca_certificates = ./box1/cacert.pem

# Directory containing root certificates.
# It must have been prepared by the c_rehash OpenSSL's utility.
# Specify at least one of ca_certificates and ca_cartificates_dir
#ca_certificates_dir = ./box1/root_certs/

# PEM file containing a certificate revocation list (CRL)
# optional
crl_file = ./box1/crl.pem

# Maximum depth for the certificate chain verification.
# optional
# default: 9
#verify_depth = 1

# The OpenSSL ciphers lists to use
# optional
# default: OpenSSL's default
# must be the same for all peers
# See openssl ciphers man page for more details
# For RSA, cipher suites with key lengths larger than 128 bits, sorted by
# strength:
#cipher_list = RSA+HIGH:@STRENGTH
# For Camellia, 128-bit key, RSA and SHA1:
#cipher_list = CAMELLIA128-SHA
# For no encryption:
#cipher_list = NULL


[CLIENT]

# Internal FIFO size
# optional
# The client uses one FIFO per connected peer
# default: 50
#fifo_size=100

# Linux only:
# Length of the TUN/TAP driver's transmit queue
# optional
# This sets the length of the internal transmit queue on the TUN device.
# default: 500 frames (current default of the TUN/TAP driver)
#txqueue=100

# Linux only:
# Use the TUN/TAP driver in single queue mode.
# optional
# This instructs the TUN/TAP driver to use its single queue mode. This is
# required to work around a bug in pre-2.6.11 kernels. It can also helps with
# slow hardware or slow connections by reducing the total TX queue length.
#tun_one_queue=yes

# Bandwidth throttling
# optional
# default: disabled
# Those two options allow to limit the outgoing traffic for the whole client
# and/or for each connection. The values are in kilobytes/seconds.
# Comment one option to disable it or use 0.
# Limit the outgoing traffic to 500 kB/s and/or allow 100 kB/s per
# connection:
#client_max_rate = 500
#connection_max_rate = 100

# Inactivity timeout before closing a session.
# optional
# The value is given in secs (integer)
# default: 120 seconds
#timeout = 120

# Period of inactivity before sending a keepalive message
# optional
# default: 10 seconds
#keepalive = 30

# Maximum number of connections with other clients
# optional
# default: 100
#max_clients = 20


#[UP]

# This section is optional. It defines the shell commands that are launched to
# configure the TUN device (IP binding, MTU, route...).
# If it is not defined, campagnol will execute some plateform-dependent default
# programs. If the section is empty, nothing will be run.

# This section can contains an arbitrary number of commands. The order of
# execution is defined by the keys sorted with strcmp (lexicographic order, for
# example: 0 < 00 < 000 < 01 < 02 < 1 < 10 < 2 < A < AA < Z < a)
# The following special values are available:
#   %D - the tun device
#   %V - VPN IP
#   %M - MTU
#   %I - local IP
#   %P - local UDP port
#   %N - Netmask
#   %% - the '%' char
# Default programs for Linux:
#01 = "ifconfig %D %V mtu %M up"
#02 = "ip route replace %N via %V || route add -net %N gw %V"
# For FreeBSD:
#01 = "ifconfig %D inet %V %V mtu %M up"
#02 = "route add -net %N %V"
# For OpenBSD (you do not need to setup the MTU with ifconfig, it's already
# done):
#01 = "ifconfig %D inet %V %V up"
#02 = "route add -net %N %V"


#[DOWN]

# This section is optional. It defines the programs that are launched when the
# TUN device is closed.
# If it is not defined, campagnol will execute some plateform-dependent default
# programs.
# The syntax is the same than for the [UP] section.
# Default for FreeBSD:
#01 = "ifconfig %D destroy"
# Default for Linux and OpenBSD: no command are executed.
